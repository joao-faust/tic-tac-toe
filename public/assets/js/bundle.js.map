{"version":3,"file":"assets/js/bundle.js","mappings":"6sCAGA,IAAMA,EAAO,ICHPC,WACJ,c,4FAAc,SACZC,KAAKC,MAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC9CD,KAAKE,WAAa,EAClBF,KAAKG,QAAU,CAAC,IAAK,KACrBH,KAAKI,UAAW,EAChBJ,KAAKK,UAAY,CACf,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GAEV,C,iDAED,SAAWC,GACT,IAAIN,KAAKI,SAQT,MAN6B,KAAzBJ,KAAKC,MAAMK,KACbN,KAAKC,MAAMK,GAAYN,KAAKG,QAAQH,KAAKE,YACzCF,KAAKI,SAAWJ,KAAKO,QAErBP,KAAKE,WAAkC,IAApBF,KAAKE,WAAoB,EAAI,GAE3CF,KAAKI,QACb,G,mBAED,WAAQ,UACSJ,KAAKK,WADd,IACN,IAAK,EAAL,qBAA+B,KACvBG,EADuB,QAGvBC,EAAOD,EAAI,GACXE,EAAOF,EAAI,GACXG,EAAOH,EAAI,GAEjB,GACER,KAAKC,MAAMQ,KAAUT,KAAKC,MAAMS,IAChCV,KAAKC,MAAMQ,KAAUT,KAAKC,MAAMU,IACX,KAArBX,KAAKC,MAAMQ,GAEX,OAAO,CAEV,CAfK,+BAgBN,OAAO,CACR,G,oBAED,WAGE,IAFA,IAAIG,GAAO,EACPC,EAAI,EACDD,GAAQC,EAAIb,KAAKC,MAAMa,QACN,KAAlBd,KAAKC,MAAMY,KACbD,GAAO,GAETC,IAEF,OAAOD,CACR,M,gFA3DGb,IDKN,SAASgB,IACSC,SAASC,iBAAiB,WAClCC,SAAQ,SAAAC,GACdA,EAAOC,UAAY,GACnBtB,EAAKM,UAAW,EAChBN,EAAKI,WAAa,EAClBJ,EAAKG,MAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC/C,GACF,CAED,SAASoB,EAAYC,GACnB,IAAIC,EAAQC,OAAOC,cAAc,MAC3BN,EAASG,EAAMI,OACfpB,EAAWa,EAAOQ,GAEpB7B,EAAK8B,WAAWtB,IACW,MAAzBR,EAAKG,MAAMK,KACbiB,EAAQC,OAAOC,cAAc,SAE/BI,YAAW,WACTC,MAAM,6BAA+BP,GACrCR,GACD,GAAE,KAGIjB,EAAKiC,UACZF,YAAW,WACTC,MAAM,sBACNf,GACD,GAAE,IAMP,SAAsBT,EAAUa,GAC9B,IAAMa,EAASlC,EAAKG,MAAMK,GAC1Ba,EAAOC,UAAP,sBAAkCY,EAAlC,WACD,CANCC,CAAa3B,EAAUa,EACxB,CAQiBH,SAASC,iBAAiB,WAClCC,SAAQ,SAAAC,GACdA,EAAOe,iBAAiB,QAASb,EAClC,IAIkBL,SAASmB,eAAe,WAChCD,iBAAiB,QAASnB,E","sources":["webpack://tic-tac-toe/./src/interface.js","webpack://tic-tac-toe/./src/modules/Game.js"],"sourcesContent":["import './assets/css/styles.css';\r\nimport Game from \"./modules/Game\";\r\n\r\nconst game = new Game();\r\n\r\nfunction restartGame() {\r\n  const squares = document.querySelectorAll(\".square\");\r\n  squares.forEach(square => {\r\n    square.innerHTML = \"\";\r\n    game.gameOver = false;\r\n    game.playerTime = 0;\r\n    game.board = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n  });\r\n}\r\n\r\nfunction handleClick(event) {\r\n  let emoji = String.fromCodePoint(0x2694);\r\n  const square = event.target;\r\n  const position = square.id;\r\n\r\n  if (game.handleMove(position)) {\r\n    if (game.board[position] === \"o\") {\r\n      emoji = String.fromCodePoint(0x1F6E1);\r\n    }\r\n    setTimeout(() => {\r\n      alert(\"It's over - The winner is \" + emoji);\r\n      restartGame();\r\n    }, 10);\r\n  }\r\n  \r\n  else if (game.isTied()) {\r\n    setTimeout(() => {\r\n      alert(\"It's over - A tie.\");\r\n      restartGame();\r\n    }, 10);\r\n  }\r\n\r\n  updateSquare(position, square);\r\n}\r\n\r\nfunction updateSquare(position, square) {\r\n  const symbol = game.board[position];\r\n  square.innerHTML = `<div class=\"${symbol}\"></div>`;\r\n}\r\n\r\n(function() {\r\n  const squares = document.querySelectorAll(\".square\");\r\n  squares.forEach(square => {\r\n    square.addEventListener(\"click\", handleClick);\r\n  });\r\n})();\r\n\r\n(function() {\r\n  const restartBtn = document.getElementById(\"restart\");\r\n  restartBtn.addEventListener(\"click\", restartGame);\r\n})();\r\n","class Game {\r\n  constructor() {\r\n    this.board = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n    this.playerTime = 0;\r\n    this.symbols = [\"x\", \"o\"];\r\n    this.gameOver = false;\r\n    this.winStates = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n  }\r\n\r\n  handleMove(position) {\r\n    if (this.gameOver) return;\r\n  \r\n    if (this.board[position] === \"\") {\r\n      this.board[position] = this.symbols[this.playerTime];\r\n      this.gameOver = this.isWin();\r\n  \r\n      this.playerTime = (this.playerTime === 0) ? 1 : 0;\r\n    }\r\n    return this.gameOver;\r\n  }\r\n\r\n  isWin() {\r\n    for (let ws of this.winStates) {\r\n      const seq = ws;\r\n  \r\n      const pos1 = seq[0];\r\n      const pos2 = seq[1];\r\n      const pos3 = seq[2];\r\n  \r\n      if (\r\n        this.board[pos1] === this.board[pos2] && \r\n        this.board[pos1] === this.board[pos3] && \r\n        this.board[pos1] !== \"\"\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isTied() {\r\n    let tied = true;\r\n    let i = 0;\r\n    while (tied && i < this.board.length) {\r\n      if (this.board[i] === \"\") {\r\n        tied = false;\r\n      }\r\n      i++;\r\n    }\r\n    return tied;\r\n  }\r\n}\r\n\r\nexport default Game;\r\n"],"names":["game","Game","this","board","playerTime","symbols","gameOver","winStates","position","isWin","seq","pos1","pos2","pos3","tied","i","length","restartGame","document","querySelectorAll","forEach","square","innerHTML","handleClick","event","emoji","String","fromCodePoint","target","id","handleMove","setTimeout","alert","isTied","symbol","updateSquare","addEventListener","getElementById"],"sourceRoot":""}